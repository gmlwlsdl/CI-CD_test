name: Docker CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Install pnpm globally
      - name: Install pnpm globally
        run: npm install -g pnpm

      # Check Node.js version
      - name: Check Node.js version
        run: node -v

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Build the project
      - name: Build
        run: pnpm run build

      # Docker meta information
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_USER }}/ci-cd_test
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
            latest

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      # Deploy Docker container (example deployment command)
      - name: Deploy Docker container
        run: |
          docker pull ${{ secrets.DOCKERHUB_USER }}/ci-cd_test:latest
          docker run -d --name my_app -p 8080:80 ${{ secrets.DOCKERHUB_USER }}/ci-cd_test:latest
